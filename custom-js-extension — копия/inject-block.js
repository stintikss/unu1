(async function () {
    console.log("üöÄ Inject script loaded!"); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∑–∏–ª—Å—è

    function clickShowLink() {
        setTimeout(() => {
            const showLink = document.getElementById("show_link");
            if (showLink && showLink.style.display !== "none") {
                showLink.click();
                console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "show_link" –≤—ã–ø–æ–ª–Ω–µ–Ω!');
            } else {
                console.warn('‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç —Å id="show_link" –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ —Å–∫—Ä—ã—Ç!');
            }
        }, 1000);
    }

    function highlightScreenshotRequest() {
        const hintElement = document.querySelector('.edit-task__hint');

        if (hintElement && hintElement.textContent.includes("–ó–∞–∫–∞–∑—á–∏–∫ –ø—Ä–æ—Å–∏—Ç –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∫ –æ—Ç—á—ë—Ç—É —Å–∫—Ä–∏–Ω—à–æ—Ç. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –µ–≥–æ –∑–¥–µ—Å—å")) {
            console.log("üì∏ –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç! –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ...");

            hintElement.style.cssText = `
                border: 3px solid red;
                padding: 10px;
                border-radius: 5px;
                animation: blink-border 1s infinite alternate;
            `;

            const style = document.createElement('style');
            style.innerHTML = `
                @keyframes blink-border {
                    from { border-color: red; }
                    to { border-color: yellow; }
                }
            `;
            document.head.appendChild(style);
        }
    }

    document.addEventListener("DOMContentLoaded", () => {
        clickShowLink();
        highlightScreenshotRequest();
    });

    if (window.location.href.startsWith("https://unu.im/tasks/report/")) {
        console.log("üìù –ù–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ:", window.location.href);

        try {
            await new Promise(resolve => setTimeout(resolve, 2000)); // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            clickShowLink(); // –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∫–ª–∏–∫ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

            const editTask = document.querySelector(".edit-task");

            console.log("üåê –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º https://unu.im/dashboard...");
            const responseDashboard = await fetch("https://unu.im/dashboard");

            if (!responseDashboard.ok) {
                throw new Error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ dashboard: ${responseDashboard.status}`);
            }

            const textDashboard = await responseDashboard.text();
            console.log("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ dashboard –∑–∞–≥—Ä—É–∂–µ–Ω–∞!");

            const parserDashboard = new DOMParser();
            const docDashboard = parserDashboard.parseFromString(textDashboard, "text/html");

            const balanceBlock = docDashboard.querySelector(".personal-area__block.block-balance");
            if (balanceBlock) {
                console.log("üí∞ –ë–ª–æ–∫ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–π–¥–µ–Ω! –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É...");
                const clonedBlock = balanceBlock.cloneNode(true);

                clonedBlock.style.cssText = `
                    max-width: 100%;
                    margin-right: 0px;
                    margin-top: -50px;
                    padding: 15px;
                    border: 2px solid #ddd;
                    border-radius: 10px;
                    background: #61647a;
                    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
                `;

                if (editTask) {
                    editTask.parentNode.insertBefore(clonedBlock, editTask.nextSibling);
                    console.log("‚úÖ –ë–ª–æ–∫ –±–∞–ª–∞–Ω—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ .edit-task!");
                } else {
                    console.warn("‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç .edit-task –Ω–µ –Ω–∞–π–¥–µ–Ω! –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü body.");
                    document.body.appendChild(clonedBlock);
                }

                document.querySelector('.side-note')?.remove();
                document.querySelector('.personal-area__btn')?.remove();

                if (editTask) {
                    editTask.style.width = '100%';
                    console.log("üìè –®–∏—Ä–∏–Ω–∞ .edit-task –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ 100%");
                }

                console.log("üë§ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º https://unu.im/users/2089641...");
                const responseUser = await fetch("https://unu.im/users/2089641");

                if (!responseUser.ok) {
                    throw new Error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${responseUser.status}`);
                }

                const textUser = await responseUser.text();
                console.log("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞!");

                const parserUser = new DOMParser();
                const docUser = parserUser.parseFromString(textUser, "text/html");

                const tableRows = docUser.querySelectorAll(".page-table tbody tr");
                if (tableRows.length >= 8) {
                    const clonedRow = tableRows[7].cloneNode(true);

                    const infoBox = document.createElement("div");
                    infoBox.style.cssText = `
                        margin-top: 15px;
                        padding: 10px;
                        border: 1px solid #ccc;
                        border-radius: 8px;
                        background: #b8b9c0;
                        box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.1);
                        font-family: Arial, sans-serif;
                        font-size: 14px;
                        color: #333;
                        text-align: left;
                    `;

                    infoBox.innerHTML = "<strong>–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</strong>";
                    infoBox.appendChild(clonedRow);

                    clonedBlock.appendChild(infoBox);
                    console.log("üìå 8-–π <tr> –¥–æ–±–∞–≤–ª–µ–Ω –≤–Ω—É—Ç—Ä—å –±–ª–æ–∫–∞ –±–∞–ª–∞–Ω—Å–∞!");
                }

            } else {
                console.warn("‚ö†Ô∏è –ë–ª–æ–∫ .personal-area__block.block-balance –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            }

            highlightScreenshotRequest(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞

            const pageTitle = document.querySelector('.page-title');
            const fullDescr = document.getElementById('full_descr');

            if (pageTitle || fullDescr) {
                const textContent = `${pageTitle?.textContent} ${fullDescr?.textContent}`.toLowerCase();

                // Ozon-specific block removed here
                // If there's no need to handle Ozon, we can skip the logic that checks for Ozon references.
                
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Telegram, Instagram, Facebook, Tiktok
                const socialPlatforms = ["telegram", "—Ç–µ–ª–µ–≥—Ä–∞–º", "—Ç–µ–ª–µ–≥—Ä–∞–º–º", "instagram", "–∏–Ω—Å—Ç–∞–≥—Ä–∞–º", "facebook", "—Ñ–µ–π—Å–±—É–∫", "tiktok", "—Ç–∏–∫—Ç–æ–∫", "–≤–∫–æ–Ω—Ç–∞–∫—Ç–µ"];
                if (socialPlatforms.some(platform => textContent.includes(platform))) {
                    console.log("üì≤ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã!");

                    const editTaskItem = document.querySelector('.edit-task__item textarea');
                    if (editTaskItem) {
                        if (/–≤–∫–æ–Ω—Ç–∞–∫—Ç–µ/i.test(textContent)) {
                            editTaskItem.value = "https://vk.com/n_nikitka_k";
                            console.log("‚úÖ –í—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ!");
                        } else {
                            editTaskItem.value = "@mefistofefel";
                            console.log("‚úÖ –í—Å—Ç–∞–≤–ª–µ–Ω —Ç–µ–∫—Å—Ç: @mefistofefel –≤ textarea!");
                        }
                    } else {
                        console.warn("‚ö†Ô∏è Textarea –≤–Ω—É—Ç—Ä–∏ .edit-task__item –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
                    }
                }
            }

            document.addEventListener("click", (event) => {
                if (event.target.classList.contains("bt-purle")) {
                    console.log("üü£ –ö–Ω–æ–ø–∫–∞ .bt-purle –Ω–∞–∂–∞—Ç–∞! –°–ª–µ–¥–∏–º –∑–∞ –ø–µ—Ä–µ—Ö–æ–¥–æ–º...");

                    const observer = new MutationObserver(() => {
                        if (window.location.href.startsWith("https://unu.im/tasks/works")) {
                            console.log("‚úÖ –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ /tasks/works, –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...");
                            window.close();
                        }
                    });

                    observer.observe(document.body, { childList: true, subtree: true });
                }
            });

        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞:", error);
        }
    } else {
        console.log("‚õî –ù–µ –Ω–∞ —Ü–µ–ª–µ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, —Å–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É.");
    }
})();
